/* 
 * This message is auto generated by ROS#. Please DO NOT modify.
 * Note:
 * - Comments from the original code will be written in their own line 
 * - Variable sized arrays will be initialized to array of size 0 
 * Please report any issues at 
 * <https://github.com/siemens/ros-sharp> 
 */



using RosSharp.RosBridgeClient;

namespace AGVSystemCommonNet6.GPMRosMessageNet.SickSafetyscanners
{
    public class ApplicationInputsMsg : Message
    {
        public const string RosMessageName = "sick_safetyscanners/ApplicationInputsMsg";

        public bool[] unsafe_inputs_input_sources { get; set; }
        public bool[] unsafe_inputs_flags { get; set; }
        public ushort[] monitoring_case_number_inputs { get; set; }
        public bool[] monitoring_case_number_inputs_flags { get; set; }
        public short linear_velocity_inputs_velocity_0 { get; set; }
        public bool linear_velocity_inputs_velocity_0_valid { get; set; }
        public bool linear_velocity_inputs_velocity_0_transmitted_safely { get; set; }
        public short linear_velocity_inputs_velocity_1 { get; set; }
        public bool linear_velocity_inputs_velocity_1_valid { get; set; }
        public bool linear_velocity_inputs_velocity_1_transmitted_safely { get; set; }
        public byte sleep_mode_input { get; set; }

        public ApplicationInputsMsg()
        {
            this.unsafe_inputs_input_sources = new bool[0];
            this.unsafe_inputs_flags = new bool[0];
            this.monitoring_case_number_inputs = new ushort[0];
            this.monitoring_case_number_inputs_flags = new bool[0];
            this.linear_velocity_inputs_velocity_0 = 0;
            this.linear_velocity_inputs_velocity_0_valid = false;
            this.linear_velocity_inputs_velocity_0_transmitted_safely = false;
            this.linear_velocity_inputs_velocity_1 = 0;
            this.linear_velocity_inputs_velocity_1_valid = false;
            this.linear_velocity_inputs_velocity_1_transmitted_safely = false;
            this.sleep_mode_input = 0;
        }

        public ApplicationInputsMsg(bool[] unsafe_inputs_input_sources, bool[] unsafe_inputs_flags, ushort[] monitoring_case_number_inputs, bool[] monitoring_case_number_inputs_flags, short linear_velocity_inputs_velocity_0, bool linear_velocity_inputs_velocity_0_valid, bool linear_velocity_inputs_velocity_0_transmitted_safely, short linear_velocity_inputs_velocity_1, bool linear_velocity_inputs_velocity_1_valid, bool linear_velocity_inputs_velocity_1_transmitted_safely, byte sleep_mode_input)
        {
            this.unsafe_inputs_input_sources = unsafe_inputs_input_sources;
            this.unsafe_inputs_flags = unsafe_inputs_flags;
            this.monitoring_case_number_inputs = monitoring_case_number_inputs;
            this.monitoring_case_number_inputs_flags = monitoring_case_number_inputs_flags;
            this.linear_velocity_inputs_velocity_0 = linear_velocity_inputs_velocity_0;
            this.linear_velocity_inputs_velocity_0_valid = linear_velocity_inputs_velocity_0_valid;
            this.linear_velocity_inputs_velocity_0_transmitted_safely = linear_velocity_inputs_velocity_0_transmitted_safely;
            this.linear_velocity_inputs_velocity_1 = linear_velocity_inputs_velocity_1;
            this.linear_velocity_inputs_velocity_1_valid = linear_velocity_inputs_velocity_1_valid;
            this.linear_velocity_inputs_velocity_1_transmitted_safely = linear_velocity_inputs_velocity_1_transmitted_safely;
            this.sleep_mode_input = sleep_mode_input;
        }
    }
}
